class UnionFind:
    def __init__(self, n):
        self.parent = [i for i in range(n)]
        self.rank = [0] * n

    def find(self, x):
        if self.parent[x] != x:
            self.parent[x] = self.find(self.parent[x])
        return self.parent[x]

    def union(self, x, y):
        rootX = self.find(x)
        rootY = self.find(y)
        
        if rootX == rootY:
            return
        
        if self.rank[rootX] > self.rank[rootY]:
            self.parent[rootY] = rootX
        elif self.rank[rootX] < self.rank[rootY]:
            self.parent[rootX] = rootY
        else:
            self.parent[rootY] = rootX
            self.rank[rootX] += 1

# Пример использования
n = 10  
uf = UnionFind(n)

# Объединение множеств
uf.union(1, 2)
uf.union(2, 3)
uf.union(4, 5)

# Проверка представителей
print(uf.find(1))  # Например, это должен быть представитель множества (корень)
print(uf.find(3))  # Тот же представитель, что и для 1 и 2
print(uf.find(5))  # Отдельное множество
